## types
## test for expression {where definitions} and empty file
#var x : integer;
#var yy : arr[03] QObject;
#typ QString: string;
#typ MyInt: integer;
#typ MyLog: logical;
#typ MyArr: arr[0020] integer


## functions
#fun a(p1:integer, p2:integer, p3:string):logical = true;        #ok
#fun f(p1:integer,p2:integer) : integer = 0;         #ok
#fun f(p1:logical) : string = 'hello world';         #ok

##expressions
#fun f(p1:integer):integer=1&2&3&4&5&6      #OK
#fun f(p1:integer):integer=1&2|3&4&5|6      #OK
#fun f(p1:integer):integer=1+2-3+3-3        #OK
#fun f(p1:integer):integer=1+2*2+3*3*3       #OK
#fun x(x:x):x=!++C   
#fun f(p1:integer,p2:integer) : integer = x & y | z <= a*b/c + 2*3 #ok
#fun f(p1:integer) : integer = x & y | z <= a*b/((c + 2)*3)
#fun x(x:x):x= x & y | z <= a*b/c + 2*3;                     
#fun x(x:x):x= (x & y) | (z <= ((a*b)/c + (2*3)))            
fun x(x:x):x= x+y*w+z { where 
    var x:integer;
    var y:string;
    typ w:integer;
    var z:logical
}

var x:my_int;
typ my_int:integer;
fun f(a:integer):my_int = x + a + y {where var y:integer};

fun f(i:integer):integer = 
(
    {x = 10},
    x
)
{
    where var x : integer
};


##klici
foo(x,z,c,v,g,foo2(x2,y2))

##errors
#fun a() = 5;            # no parameters